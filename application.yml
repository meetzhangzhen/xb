server:
  port: 8888
  tomcat:
    uri-encoding: UTF-8
http:
  encoding:
    charset: utf-8
    enabled: true

# 数据源连接
spring:
  server:
    minSpareThreads: 50
    protocol: org.apache.coyote.http11.Http11NioProtocol
    maxSpareThreads: 50
    port: 8122
    maxFileSize: 300MB
    maxHttpHeaderSize: 3145728
    redirectPort: 443
    maxRequestSize: 500MB
    acceptorThreadCount: 4
    maxThreads: 1000
    maxConnections: 10000
    compression: on
    connectionTimeout: 180000
  #main:
  #  allow-circular-references: true
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/work_order?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false
    username: root
    password: ecnu0512
    initialSize: 10    # 初始化大小
    minIdle: 10        # 最小
    maxActive: 500     # 最大
    maxWait: 10000    # 获取连接等待超时的时间
    timeBetweenEvictionRunsMillis: 60000    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    minEvictableIdleTimeMillis: 300000      # 配置一个连接在池中最小生存的时间，单位是毫秒
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true                    # 打开PSCache
    maxPoolPreparedStatementPerConnectionSize: 20   # 指定每个连接上PSCache的大小
    filters: stat,wall                       # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000  # 通过connectProperties属性来打开mergeSql功能；慢SQL记录

# 分页插件
#pagehelper:
#  helperDialect:  mysql
#  reasonable: true
#  supportMethodsArguments:  true
#  params: count=countSql
# Mybatis


mybatis:
  mapper-locations: classpath:mapper/*Mapper.xml
  type-aliases-package: com.xbhy.workorder.entity
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

mapper:
  mappers: com.xbhy.workorder.mapper.BaseMapper
  not-empty: false
  identity: MYSQL
# log4j
logging:
  file:
    name: ./log/work-order.log
  config: classpath:logback-spring.xml
#  level:
#    root: info
#    org.springframework: info
#    org.mybatis: info
#    org.zuel.lkq: error
#    com.xbhy.workorder.mapper: debug
# 变量配置
regex:
  email: ^([0-9A-Za-z\-_\.]+)@([0-9a-z]+\.[a-z]{2,3}(\.[a-z]{2,3})?)$
  mobile: ^[1][0-9]{10}$




#是否开启 swagger-ui
swagger:
  enabled: true

# 防止XSS攻击
xss:
  # 过滤开关
  enabled: true
  # 排除链接（多个用逗号分隔）
  excludes: /system/*
  # 匹配链接
  urlPatterns: /system/*,/monitor/*,/tool/*
#shiro:
#  redis:
#    host: 127.0.0.1:6379
#    password: 123456
#    timeout: 1800000

# Shiro
shiro:
  user:
    # 登录地址
    loginUrl: /checkLogin
    # 登录地址
    loginOutUrl: /login
    # 权限认证失败地址
    unauthorizedUrl: /unauth
    # 首页地址
    indexUrl: /index
    # 验证码开关
    captchaEnabled: true
    # 验证码类型 math 数组计算 char 字符
    captchaType: math
  cookie:
    # 设置Cookie的域名 默认空，即当前访问的域名
    domain:
    # 设置cookie的有效访问路径
    path: /
    # 设置HttpOnly属性
    httpOnly: true
    # 设置Cookie的过期时间，天为单位
    maxAge: 120
  session:
    # Session超时时间（默认30分钟）
    expireTime: 120
    # 同步session到数据库的周期（默认1分钟）
    dbSyncPeriod: 1
    # 相隔多久检查一次session的有效性，默认就是10分钟
    validationInterval: 10
    # 同一个用户最大会话数，比如2的意思是同一个账号允许最多同时两个人登录（默认-1不限制）
    maxSession: -1
    # 踢出之前登录的/之后登录的用户，默认踢出之前登录的用户
    kickoutAfter: false

attachUrl: E:\\workorder\\attaches\\
staff:
  loginNameIndex: "该登录名用户已存在"
  mobileIndex: "手机号已存在"
  emailIndex: "邮箱已存在"
  staffNoIndex: "员工号已存在"
  updatePwdSuccess: "密码修改成功！"
  updatePwdFailed: "密码修改异常！"
  resetPwdSuccess: "密码重置成功！"
  resetPwdFailed: "密码重置异常！"
  confirmEqualPwd : "新密码与确认密码必须相同！"
  notEqualOldPwd: "修改新密码不能与旧密码相同！"
  updateStaffFailed: "用户信息更新失败！"
  loginNameNoExist: "该登录名用户不存在！"
  loginNamePwdNotMatch: "用户名和密码不匹配！"
  retryLimitCount: "登录超过最大输入次数！"
  inValidVerifyCode: "验证码不正确！"
  maxRetryCount: 5
  jcaptcha:
    error: "验证码错误"
record:
  file:
    path: E:\\workorder\\attaches\\